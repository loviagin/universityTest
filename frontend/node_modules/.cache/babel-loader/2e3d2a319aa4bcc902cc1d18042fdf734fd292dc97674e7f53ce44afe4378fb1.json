{"ast":null,"code":"var _jsxFileName = \"/Users/ilialoviagin/Library/Mobile Documents/com~apple~CloudDocs/\\u041C\\u0418\\u0420\\u042D\\u0410/4 \\u0441\\u0435\\u043C/universitytest/frontend/src/components/ThemeToggle.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/ThemeToggle.js\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toggleTheme } from '../actions/themeActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeToggle = () => {\n  _s();\n  const dispatch = useDispatch();\n  const darkMode = useSelector(state => state.theme.darkMode);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(toggleTheme()),\n      children: [\"\\u041F\\u0435\\u0440\\u0435\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C \\u0442\\u0435\\u043C\\u0443: \", darkMode ? 'Тёмная' : 'Светлая']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeToggle, \"5UM+3DxrEzegQqMTBFLzxehiuOY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ThemeToggle;\nexport default ThemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ThemeToggle\");","map":{"version":3,"names":["React","useSelector","useDispatch","toggleTheme","jsxDEV","_jsxDEV","ThemeToggle","_s","dispatch","darkMode","state","theme","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ilialoviagin/Library/Mobile Documents/com~apple~CloudDocs/МИРЭА/4 сем/universitytest/frontend/src/components/ThemeToggle.js"],"sourcesContent":["// frontend/src/components/ThemeToggle.js\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toggleTheme } from '../actions/themeActions';\n\nconst ThemeToggle = () => {\n  const dispatch = useDispatch();\n  const darkMode = useSelector(state => state.theme.darkMode);\n\n  return (\n    <div>\n      <button onClick={() => dispatch(toggleTheme())}>\n        Переключить тему: {darkMode ? 'Тёмная' : 'Светлая'}\n      </button>\n    </div>\n  );\n};\n\nexport default ThemeToggle;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,QAAQ,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,KAAK,CAACF,QAAQ,CAAC;EAE3D,oBACEJ,OAAA;IAAAO,QAAA,eACEP,OAAA;MAAQQ,OAAO,EAAEA,CAAA,KAAML,QAAQ,CAACL,WAAW,CAAC,CAAC,CAAE;MAAAS,QAAA,GAAC,+FAC5B,EAACH,QAAQ,GAAG,QAAQ,GAAG,SAAS;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACV,EAAA,CAXID,WAAW;EAAA,QACEJ,WAAW,EACXD,WAAW;AAAA;AAAAiB,EAAA,GAFxBZ,WAAW;AAajB,eAAeA,WAAW;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}